name: "Backend"
on:
  pull_request:
  push:
jobs:
  build_backend:
    name: Build and push docker image
    runs-on: ubuntu-latest
    environment: develop
    outputs:
      image_id: ${{ steps.build_image.outputs.image_id }}
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: build image
      id: build_image
      run: |
        cd backend
        image_id=$(./buildimage.sh)
        echo "::set-output name=image_id::$image_id"
    - name: gcr.io login
      uses: actions-hub/gcloud@master
      id: token_step
      with:
        args: "auth print-access-token | bash -c 'read token; echo ::set-output name=token::$token'"
      env:
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_APPLICATION_CREDENTIALS }}
    - name: docker push
      run: |
        echo ${{ steps.token_step.outputs.token }} | docker login -u oauth2accesstoken --password-stdin https://gcr.io
        docker tag ${{ steps.build_image.outputs.image_id }} gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/srv
        docker push gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/srv
    - name: show docker image name
      run: |
        docker inspect --format='{{index .Id}}' gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/srv

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: "${{github.ref == 'refs/heads/main'}}"
    needs: build_backend
    steps:
    - name: gcloud deploy
      uses: actions-hub/gcloud@master
      with:
        args: run deploy --platform managed --region europe-west3 srv --image gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/srv@${{ needs.build_backend.outputs.image_id }}
      env:
        PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_APPLICATION_CREDENTIALS }}
